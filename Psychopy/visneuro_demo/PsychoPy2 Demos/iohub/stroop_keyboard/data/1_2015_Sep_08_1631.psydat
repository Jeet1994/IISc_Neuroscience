ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
S'C:\\Users\\user1\\Desktop\\psychopy_neuro-master\\Lesson_plan_Psychopy\\visneuro_demo\\PsychoPy2 Demos\\iohub\\stroop_keyboard\\stroop.psyexp'
p7
sS'dataFileName'
p8
VC:\u005cUsers\u005cuser1\u005cDesktop\u005cpsychopy_neuro-master\u005cLesson_plan_Psychopy\u005cvisneuro_demo\u005cPsychoPy2 Demos\u005ciohub\u005cstroop_keyboard\u005cdata\u005c1_2015_Sep_08_1631
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'stroop'
p12
sS'dataNames'
p13
(lp14
sS'autoLog'
p15
I01
sS'extraInfo'
p16
(dp17
S'date'
p18
V2015_Sep_08_1631
p19
sS'frameRate'
p20
cnumpy.core.multiarray
scalar
p21
(cnumpy
dtype
p22
(S'f8'
I0
I1
tRp23
(I3
S'<'
NNNI-1
I-1
I0
tbS'V\xb0\xb6<Q\xfcM@'
tRp24
sS'expName'
p25
g12
sVParticipant
p26
V1
ssS'loopsUnfinished'
p27
(lp28
g1
(cpsychopy.data
TrialHandler
p29
g3
NtRp30
(dp31
S'origin'
p32
V<PsychoPy2experiment version="1.78.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1680, 1050]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Experiment info" val="{u'Participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="stroop" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="Units" val="pix" valType="str" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Saved data folder" val="" valType="code" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <TextComponent name="stimulus">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimColor" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimText" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="100" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="iohub_keyboard">\u000a        <Param name="Begin Experiment" val="try:&#10;    from psychopy.iohub import EventConstants,KeyboardConstants,ioHubConnection,load,Loader&#10;    from psychopy.data import getDateStr&#10;    # Load the iohub device config, file converting it to a python dict.&#10;    io_config=load(file('iohub_config.yaml','r'), Loader=Loader)&#10;&#10;    # Add / Update the session code to be unique. Here we use the psychopy getDateStr() function for session code generation&#10;    session_info=io_config.get('data_store').get('session_info')&#10;    session_info.update(code=&quot;S_%s&quot;%(getDateStr()))&#10;&#10;    # Create an ioHubConnection instance, which starts the ioHubProcess, and informs it of the requested devices and their configurations.&#10;    io=ioHubConnection(io_config)&#10;    iokeyboard=io.devices.keyboard&#10;    iomouse=io.devices.mouse&#10;except Exception, e:&#10;   import sys&#10;   print &quot;!! Error starting ioHub: &quot;,e,&quot; Exiting...&quot;&#10;   sys.exit(1)" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="iohub_keyboard" valType="code" updates="None"/>\u000a        <Param name="Each Frame" val="if frameN == 0:&#10;    io.clearEvents('all')&#10;    trial_start=core.getTime()&#10;else:&#10;    iokeys=iokeyboard.getEvents(EventConstants.KEYBOARD_CHAR)&#10;    for iok in iokeys:&#10;        if iok.key in [u'DOWN',u'LEFT',u'RIGHT']:&#10;            response_event=iok&#10;            continueRoutine = False &#10;            break" valType="extendedCode" updates="constant"/>\u000a        <Param name="Begin Routine" val="response_event=None&#10;trial_start=0&#10;io.clearEvents()" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="trials.addData(&quot;trial_start_time&quot;, trial_start)&#10;if response_event:&#10;    trials.addData(&quot;resp.time&quot;, response_event.time)&#10;    trials.addData(&quot;resp.rt&quot;, response_event.time-trial_start)&#10;    trials.addData(&quot;resp.duration&quot;, response_event.duration)&#10;    trials.addData('resp.keys',response_event.key)&#10;    trials.addData('resp.corr', response_event.key.lower()==corrAns)&#10;else:&#10;    trials.addData(&quot;resp.time&quot;,-1.0)&#10;    trials.addData(&quot;resp.rt&quot;, -1.0)&#10;    trials.addData(&quot;resp.duration&quot;, -1.0)&#10;    trials.addData('resp.keys','None')&#10;    trials.addData('resp.corr', False)&#10;&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="io.quit()" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instruct">\u000a      <TextComponent name="instrText">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instrText" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="800" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1, 1, 1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK. Ready?&#10;&#10;Remember:&#13;&#10;1) Stay fixated on the central white dot.&#13;&#10;2) Ignore the word itself; press:&#10;&#9;- Left for red LETTERS&#10;&#9;- Down for green LETTERS&#10;&#9;- Right for blue LETTERS&#10;&#9;- (Esc will quit)&#10;3) To toggle gaze position visibility, press 'g'.&#13;&#10;&#10;Press any key to continue" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="50" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ready">\u000a        <Param name="correctAns" val="thisTrial.corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ready" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="thanks">\u000a      <TextComponent name="thanksText">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="thanksText" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="800" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1, 1, 1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="This is the end of the experiment.&#10;&#10;Thanks!" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="2.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="50" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="instruct"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trialTypes.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="5" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'stimColor': u'red', u'stimText': u'red', u'congruent': 1, u'corrAns': u'left'}, {u'stimColor': u'green', u'stimText': u'red', u'congruent': 0, u'corrAns': u'down'}, {u'stimColor': u'green', u'stimText': u'green', u'congruent': 1, u'corrAns': u'down'}, {u'stimColor': u'blue', u'stimText': u'green', u'congruent': 0, u'corrAns': u'right'}, {u'stimColor': u'blue', u'stimText': u'blue', u'congruent': 1, u'corrAns': u'right'}, {u'stimColor': u'red', u'stimText': u'blue', u'congruent': 0, u'corrAns': u'left'}]" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="thanks"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p33
sS'thisTrial'
p34
g1
(cpsychopy.data
TrialType
p35
c__builtin__
dict
p36
(dp37
VstimColor
p38
Vred
p39
sVstimText
p40
g39
sVcongruent
p41
I1
sVcorrAns
p42
Vleft
p43
stRp44
sS'_exp'
p45
I71993136
sg11
S'trials'
p46
sg6
g7
sS'thisRepN'
p47
I0
sg15
I01
sg16
g17
sS'data'
p48
g1
(cpsychopy.data
DataHandler
p49
g36
(dp50
S'ran'
p51
cnumpy.ma.core
_mareconstruct
p52
(cnumpy.ma.core
MaskedArray
p53
cnumpy
ndarray
p54
(I0
tp55
S'b'
tRp56
(I1
(I6
I5
tg22
(S'f4'
I0
I1
tRp57
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'order'
p58
g52
(g53
g54
g55
S'b'
tRp59
(I1
(I6
I5
tg57
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
NtbstRp60
(dp61
S'isNumeric'
p62
(dp63
g51
I01
sg58
I01
ssg46
g30
sS'dataTypes'
p64
(lp65
g51
ag58
asS'dataShape'
p66
(lp67
I6
aI5
asbsS'method'
p68
S'random'
p69
sS'sequenceIndices'
p70
cnumpy.core.multiarray
_reconstruct
p71
(g54
(I0
tS'b'
tRp72
(I1
(I6
I5
tg22
(S'i4'
I0
I1
tRp73
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x00\x00\x00\x00\x05\x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x05\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x05\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x04\x00\x00\x00\x01\x00\x00\x00\x05\x00\x00\x00\x04\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x04\x00\x00\x00'
tbsS'finished'
p74
I00
sS'nReps'
p75
I5
sS'nRemaining'
p76
I29
sS'trialList'
p77
(lp78
g44
ag1
(g35
g36
(dp79
g38
Vgreen
p80
sg40
g39
sg41
I0
sg42
Vdown
p81
stRp82
ag1
(g35
g36
(dp83
g38
g80
sg40
g80
sg41
I1
sg42
g81
stRp84
ag1
(g35
g36
(dp85
g38
Vblue
p86
sg40
g80
sg41
I0
sg42
Vright
p87
stRp88
ag1
(g35
g36
(dp89
g38
g86
sg40
g86
sg41
I1
sg42
g87
stRp90
ag1
(g35
g36
(dp91
g38
g39
sg40
g86
sg41
I0
sg42
g43
stRp92
asS'seed'
p93
NsS'thisIndex'
p94
g21
(g73
S'\x00\x00\x00\x00'
tRp95
sS'thisN'
p96
I0
sS'thisTrialN'
p97
I0
sS'nTotal'
p98
I30
sS'_warnUseOfNext'
p99
I01
sbasS'saveWideText'
p100
I01
sS'thisEntry'
p101
(dp102
sS'version'
p103
S''
sS'_paramNamesSoFar'
p104
(lp105
sS'entries'
p106
(lp107
sS'loops'
p108
(lp109
g30
asS'savePickle'
p110
I00
sb.